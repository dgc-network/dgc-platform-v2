# Copyright 2019 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM ubuntu:bionic

# Install base dependencies
RUN apt-get update \
 && apt-get install -y -q \
    build-essential \
    curl \
    gcc \
    g++ \
    libpq-dev \
    libssl-dev \
    libsasl2-dev \
    libzmq3-dev \
    openssl \
    pkg-config \
    unzip \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

ENV PATH=$PATH:/root/.cargo/bin

# Install Rust
RUN curl https://sh.rustup.rs -sSf > /usr/bin/rustup-init \
 && chmod +x /usr/bin/rustup-init \
 && rustup-init -y

RUN rustup update \
 && rustup target add wasm32-unknown-unknown

# Install cargo deb
RUN cargo install cargo-deb

# Install protoc
RUN curl -OLsS https://github.com/google/protobuf/releases/download/v3.7.1/protoc-3.7.1-linux-x86_64.zip \
    && unzip -o protoc-3.7.1-linux-x86_64.zip -d /usr/local \
    && rm protoc-3.7.1-linux-x86_64.zip

# Create empty cargo projects for top-level projects
WORKDIR /build
RUN USER=root cargo new --bin cli
RUN USER=root cargo new --bin daemon
RUN USER=root cargo new --bin sdk

# Create empty Cargo projects for contracts
RUN USER=root cargo new --bin contracts/pike
RUN USER=root cargo new --bin contracts/product
RUN USER=root cargo new --bin contracts/schema
RUN USER=root cargo new --bin contracts/track_and_trace

# Copy over Cargo.toml files
COPY Cargo.toml /build/Cargo.toml
COPY cli/Cargo.toml /build/cli/Cargo.toml
COPY daemon/Cargo.toml /build/daemon/Cargo.toml
COPY sdk/Cargo.toml /build/sdk/Cargo.toml

COPY contracts/pike/Cargo.toml /build/contracts/pike/Cargo.toml
COPY contracts/product/Cargo.toml /build/contracts/product/Cargo.toml
COPY contracts/schema/Cargo.toml /build/contracts/schema/Cargo.toml
COPY contracts/track_and_trace/Cargo.toml /build/contracts/track_and_trace/Cargo.toml

# Do release builds for each Cargo.toml
RUN find . -name 'Cargo.toml' -exec \
    sh -c 'x="{}"; cargo build --release --manifest-path "$x" ' \;

# Do wasm builds for the contracts
RUN find contracts -name 'Cargo.toml' -exec \
    sh -c 'x="{}"; cargo build --target wasm32-unknown-unknown --release --manifest-path "$x" ' \;

# Clean up built files
RUN rm -f \
    target/release/grid* \
    target/release/deps/grid* \
    target/wasm32-unknown-unknown/release/grid* \
    target/wasm32-unknown-unknown/release/deps/grid*

# Clean up leftover files
RUN find . -name 'Cargo.toml' -exec \
    sh -c 'x="{}"; rm "$x" ' \;
